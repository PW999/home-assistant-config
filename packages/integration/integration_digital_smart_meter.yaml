---
###############################################################################
#   @author         :   Phillip (P_W999)
#   @date           :   04/2021
#   @package        :   Digital Smart Meter enhancements
#   @description    :   Generate some extra data to monitor power consumption
#   @url            :   https://codeberg.org/PW999/home-assistant-config/
#   @credit         :   https://github.com/home-assistant/core/issues/40595
###############################################################################

# TODO:
# [X] One automation for high and low record
# [ ] Automation on configurable date to record last year's value (check last invoice)
# [ ] Add this year's average cost/day sensor + automation

homeassistant:
  customize:
    sensor.current_phase_l1:
      icon: mdi:current-ac
    sensor.current_phase_l2:
      icon: mdi:current-ac
    sensor.current_phase_l3:
      icon: mdi:current-ac
    sensor.voltage_phase_l1:
      icon: mdi:sine-wave
    sensor.voltage_phase_l2:
      icon: mdi:sine-wave
    sensor.voltage_phase_l3:
      icon: mdi:sine-wave

input_number:
  # How much is paid per kWh
  electricity_tarrif:
    name: Hourly tarrif
    initial: 0.251 # (total cost 1000kWh - data cost (€13.94) - capaciteitstarief (€100,56)) /1000
    min: 0.2
    max: 1.0
    unit_of_measurement: EUR/kWh

  # Used to calculate today's consumption on the "high" (day) channel
  electricity_previous_consumption_high:
    name: Yesterday's high consumption
    min: 0
    max: 999999
    unit_of_measurement: kWh

  # Used to calculate today's consumption on the "low" (night/weekend) channel
  electricity_previous_consumption_low:
    name: Yesterday's low consumption
    min: 0
    max: 999999
    unit_of_measurement: kWh

  # Used to calculate this year's consumption on the "high" (day) channel
  electricity_last_yr_consumption_high:
    name: Last years high consumption
    min: 0
    max: 999999
    unit_of_measurement: kWh

  # Used to calculate this year's consumption on the "low" (night/weekend) channel
  electricity_last_yr_consumption_low:
    name: Last years low consumption
    min: 0
    max: 999999
    unit_of_measurement: kWh

counter:
  # Old workaround, DMSR integration would not reconnect and my meter is really far away so it dropped a lot
  # Plus there's a lot of noise on the 2.4Ghz channel apparently
  dsmr_reconnect:
    name: DSMR number of workaround reconnects
    step: 1
    icon: mdi:restart

rest_command:
  # Call HomeAssistant and force it to reload the integation
  # dsmr_reload_url format: http://localhost:8123/api/config/config_entries/entry/{DSMR_INTEGRATION_ID}/reload
  reload_dsmr:
    url: !secret dsmr_reload_url
    method: POST
    headers:
      authorization: !secret self_rest_token

group:
  meter_readings:
    name: Meter readings
    entities:
      - sensor.energy_consumption_tarif_1
      - sensor.energy_consumption_tarif_2
  dsmr_input_values:
    name: Smart meter input values
    icon: mdi:sort-numeric-variant
    entities:
      - input_number.electricity_tarrif
      - input_number.electricity_previous_consumption_high
      - input_number.electricity_previous_consumption_low
      - input_number.electricity_last_yr_consumption_high
      - input_number.electricity_last_yr_consumption_low

template:
    - trigger:
      - trigger: time_pattern
        minutes: "/20"
      - trigger: homeassistant
        event: start
      sensor:
      - name: Today's energy consumption
        unique_id: sensor_dsmr_todays_energy_consumption
        device_class: energy
        unit_of_measurement: kWh
        availability: >-
          {{ True if
              not is_state('sensor.energy_consumption_tarif_1', 'unavailable')
              and not is_state('sensor.energy_consumption_tarif_2', 'unavailable')
              and not is_state('sensor.energy_consumption_tarif_1', 'unknown')
              and not is_state('sensor.energy_consumption_tarif_2', 'unknown')
              else False
          }}
        state: >-
          {{
            (
              float(states('sensor.energy_consumption_tarif_1')) - float(states('input_number.electricity_previous_consumption_high'))
              +
              float(states('sensor.energy_consumption_tarif_2')) - float(states('input_number.electricity_previous_consumption_low'))
            ) | round(1)
          }}

    - trigger:
      - trigger: time_pattern
        minutes: "/20"
      - trigger: homeassistant
        event: start
      sensor:
      - name: This year's energy consumption
        unique_id: sensor_dsmr_this_year_energy_consumption
        device_class: energy
        unit_of_measurement: kWh
        availability: >-
          {{ True if
              not is_state('sensor.energy_consumption_tarif_1', 'unavailable')
              and not is_state('sensor.energy_consumption_tarif_2', 'unavailable')
              and not is_state('sensor.energy_consumption_tarif_1', 'unknown')
              and not is_state('sensor.energy_consumption_tarif_2', 'unknown')
              else False
          }}
        state: >-
          {{
            (
              float(states('sensor.energy_consumption_tarif_1')) - float(states('input_number.electricity_last_yr_consumption_high'))
              +
              float(states('sensor.energy_consumption_tarif_2')) - float(states('input_number.electricity_last_yr_consumption_low'))
            ) | round(1)
          }}

    - trigger:
      - trigger: time_pattern
        minutes: "/30"
      - trigger: homeassistant
        event: start
      sensor:
      - name: Today's energy cost
        unique_id: sensor_dsmr_todays_energy_cost
        unit_of_measurement: €
        icon: mdi:currency-eur
        availability: >-
          {{ True if
              not is_state('sensor.energy_daily_consumption', 'unavailable')
              and not is_state('sensor.energy_daily_consumption', 'unknown')
              else False
          }}
        state: >-
          {{
            (
              float(states('sensor.energy_daily_consumption')) * float(states('input_number.electricity_tarrif'))
            ) | round(2)
          }}

    - trigger:
      - trigger: time_pattern
        minutes: "/30"
      - trigger: homeassistant
        event: start
      sensor:
      - name: This year's energy cost
        unique_id: sensor_dsmr_this_year_energy_cost
        unit_of_measurement: €
        icon: mdi:currency-eur
        availability: >-
          {{ True if
              not is_state('sensor.energy_yearly_consumption', 'unavailable')
              and not is_state('sensor.energy_yearly_consumption', 'unknown')
              else False
          }}
        state: >-
          {{
            (
              float(states('sensor.energy_yearly_consumption')) * float(states('input_number.electricity_tarrif'))
            ) | round(2)
          }}

sensor:
    # For esp-link based P1-port readers, also record the wifi RSSI
  - platform: rest
    name: P1 Reader RSSI
    resource: http://10.0.2.50/wifi/info
    timeout: 30
    scan_interval: 300
    value_template: "{{ value_json.rssi | replace('dB', '') | float }}"
    device_class: signal_strength
    unit_of_measurement: dB

##############################################
# DSMR integration
##############################################
automation:
  - id: dsmr_save_yesterday_consumption
    alias: DSMR - Record yesterday consumption
    description: Set yesterday's high and low consumption in a variable
    triggers:
      - trigger: time
        at: "00:00:00"
    actions:
      - action: input_number.set_value
        data:
          entity_id: input_number.electricity_previous_consumption_high
          value: "{{ states('sensor.energy_consumption_tarif_1') }}"
      - action: input_number.set_value
        data:
          entity_id: input_number.electricity_previous_consumption_low
          value: "{{ states('sensor.energy_consumption_tarif_2') }}"

  # https://github.com/home-assistant/core/issues/40595
  - id: dsmr_reconnect_workaround
    alias: DSMR - Reconnect
    description: Workaround for old bug, force DSMR integration reload if the P1 reader disconnected
    mode: single
    triggers:
      - trigger: time_pattern
        minutes: /10
    conditions:
      - condition: template
        value_template: >-
          {{ (as_timestamp(now()) -
          as_timestamp(states.sensor.power_consumption.last_updated)) |
          int > 120 }}
    actions:
      - action: rest_command.reload_dsmr
        data: {}
      - action: counter.increment
        data:
          entity_id: counter.dsmr_reconnect
