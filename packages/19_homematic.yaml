###############################################################################
#   @author         :   Phillip (P_W999)
#   @date           :   08/05/2021
#   @package        :   Homematic package
#   @description    :   Integrates local running RaspberryMatic and regulates thermostat
#   @url            :   https://github.com/PW999/home-assistant-config/
###############################################################################

# TODO
# [ ] Add detect reconnect

homematic:
  interfaces:
    ip:
      host: 192.168.0.16
      port: 2010
      resolvenames: 'json'
      username: !secret homematic_user
      password: !secret homematic_password

sensor:
  - platform: template
    sensors:
      hmip_000a1709af6337_valve:
        friendly_name: "000a1709af6337 valve"
        unit_of_measurement: '%'
        availability_template: "{{ not is_state('climate.000a1709af6337', 'unavailable')  }}"
        value_template: "{{ state_attr('climate.000a1709af6337', 'level') * 100 | round(0) | int }}"
      hmip_000a1709af6337_rssi:
        friendly_name: "000a1709af6337 rssi"
        device_class: signal_strength
        availability_template: "{{ not is_state('climate.000a1709af6337', 'unavailable')  }}"
        value_template: "{{ state_attr('climate.000a1709af6337', 'rssi_device') }}"

binary_sensor:
  - platform: template
    sensors:
      homematic_up:
        friendly_name: 'Homematic is sending updates'
        value_template: >-
          {{ as_timestamp(now()) - ( [as_timestamp(states.sensor.hmip_000a1709af6337_valve.last_changed), as_timestamp(states.sensor.hmip_000a1709af6337_rssi.last_changed)]  | max ) < 7200 }}

input_number:
  heating_offset_living_room:
    name: Living room offset
    initial: 0.0
    min: -2.0
    max: 2.0
    step: 0.5

# CONTROL MODES
# 0: AUTO
# 1: MANU
# 2: ?
# 3: ?

# Week programmes:
# 1: normal day (weekends at 21°c, weekdays not during the day)
# 2: all day at home (always at 21°c except at night)
# 3: away mode (always at 16°c)

##############################################
# All related to the homematic thermostats (8000000019xxx)
##############################################
# NEXT_ID 14
automation:
    # Turn off all the radiators when it's either warm outside, when the master switch is off (when I sleep or when I'm gone)
    # or when the summer mode is activated
    # Does not trigger when vacation mode is enabled or when summer mode is enabled
  - id: '8000000019001'
    alias: 'Heating: Turn off all radiators'
    trigger:
    - platform: state
      entity_id: input_boolean.master_switch
      to: 'off'
    - platform: numeric_state
      entity_id: weather.pw_casa
      value_template: "{{ state_attr('weather.pw_casa', 'temperature') | float }}"
      above: 22
    condition:
      - alias: 'Vacation mode is disabled'
        condition: state
        entity_id: input_boolean.vacation
        state: 'off'
      - alias: 'Summer mode is disabled'
        condition: state
        entity_id: input_boolean.summer
        state: 'off'
    action:
      - service: homematic.set_device_value # enable the away schedule
        data:
          address: 000A1709AF6337
          channel: 1
          param: ACTIVE_PROFILE
          value: 3
          value_type: int

    # Sets the week schedule to one where the temperature is 21°c all day long. Can be usefull on holidays during the week.
    # Also triggers when I'm returning home (it should be on week schedule 3)
    # Does not trigger when vacation or summer mode is enabled or when it's warm outside (should stay on schedule 3)
  - id: '8000000019005'
    alias: 'Heating: Switch to all day on schedule'
    trigger:
      - platform: time
        at: '02:00:00'
      - platform: zone
        zone: zone.5km_from_home  # FYI, I shrunk it to 4km but the zone is still called zone.5km_from_home, don't name your zones like this
        entity_id:
          - person.phillip
        event: enter
      - platform: zone
        zone: zone.mama # I live close to my mom
        entity_id:
          - person.phillip
        event: leave
      - platform: zone
        zone: zone.work
        entity_id:
          - person.phillip
        event: leave
      - platform: numeric_state
        entity_id: weather.pw_casa
        value_template: "{{ state_attr('weather.pw_casa', 'temperature') | float }}"
        below: 22
      - platform: state
        entity_id: input_boolean.master_switch
        to: 'on'
    condition:
      - condition: numeric_state
        entity_id: weather.pw_casa
        value_template: "{{ state_attr('weather.pw_casa', 'temperature') | float }}"
        below: 22
      - alias: 'Vacation mode is disabled'
        condition: state
        entity_id: input_boolean.vacation
        state: 'off'
      - alias: 'Summer mode is disabled'
        condition: state
        entity_id: input_boolean.summer
        state: 'off'
      - alias: It is not a workday
        condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'off'
      - alias: 'Only on weekdays'   # a weekday + not workday == public holiday, so I'll probably be at home
        condition: time
        before: '23:59:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: homematic.set_device_value # enable the all day long heating schedule
        data:
          address: 000A1709AF6337
          channel: 1
          param: ACTIVE_PROFILE
          value: 2
          value_type: int

  - id: '8000000019006'
    alias: 'Heating: Switch to regular schedule'
    trigger:
      - platform: time
        at: '02:00:00'
      - platform: zone
        zone: zone.5km_from_home  # FYI, I shrunk it to 4km but the zone is still called zone.5km_from_home, don't name your zones like this
        entity_id:
          - person.phillip
        event: enter
      - platform: zone
        zone: zone.mama # I live close to my mom
        entity_id:
          - person.phillip
        event: leave
      - platform: zone
        zone: zone.work
        entity_id:
          - person.phillip
        event: leave
      - platform: numeric_state
        entity_id: weather.pw_casa
        value_template: "{{ state_attr('weather.pw_casa', 'temperature') | float }}"
        below: 22
      - platform: state
        entity_id: input_boolean.master_switch
        to: 'on'
    condition:
      - condition: numeric_state
        entity_id: weather.pw_casa
        value_template: "{{ state_attr('weather.pw_casa', 'temperature') | float }}"
        below: 22
      - alias: 'Vacation mode is disabled'
        condition: state
        entity_id: input_boolean.vacation
        state: 'off'
      - alias: 'Summer mode is disabled'
        condition: state
        entity_id: input_boolean.summer
        state: 'off'
      - condition: or
        conditions:
        - alias: It is a workday
          condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'on'
        - alias: It's weekend
          condition: time
          before: '23:59:00'
          weekday:
            - sat
            - sun
    action:
      - service: climate.set_hvac_mode  # reset HA to auto schedule
        target:
          entity_id: climate.000a1709af6337
        data:
          hvac_mode: auto
      - service: homematic.set_device_value # enable the regular schedule
        data:
          address: 000A1709AF6337
          channel: 1
          param: ACTIVE_PROFILE
          value: 1
          value_type: int



    # Keeps the house at an okay temperature for the cat when I'm on holiday leave
  - id: '8000000019004'
    alias: 'Heating: Set heating vacation mode'
    trigger:
      - platform: state
        entity_id: input_boolean.vacation
        to: 'on'
    action:
      - service: homematic.set_device_value
        data:
          address: 000A1709AF6337
          channel: 1
          param: CONTROL_MODE
          value: 1  # MANU
      - delay: 5
      - service: homematic.set_device_value
        data:
          address: 000A1709AF6337
          channel: 1
          param: SET_POINT_TEMPERATURE
          value: 17

    # Make minor adjustments to the target value based on the Aqara temperature sensor
  # - id: '8000000019008'
  #   alias: 'Heating: Correct offset'
  #   mode: single
  #   trigger:
  #     - platform: state
  #       entity_id: climate.000a1709af6337
  #     - platform: state
  #       entity_id: sensor.living_room
  #   condition:
  #     - platform: state
  #       entity_id: input_boolean.vacation
  #       to: 'off'
  #     - alias: If actual room is at least 1°c off
  #       condition: template
  #       value_template: "{{  ( states('sensor.living_room') | float - state_attr('climate.000a1709af6337', 'current_temperature') | float ) | abs | float > 1.0 }}"
  #   action:
  #     - service: homematic.put_paramset
  #       data:
  #         interface: ip
  #         address: '000A1709AF6337:1'
  #         paramset_key: MASTER
  #         paramset:
  #           TEMPERATURE_OFFSET: -1.0
  #       - delay: 3600
  - id: '8000000019009'
    alias: "Heating: Homematic Reconnect"
    trigger:
      platform: state
      entity_id: binary_sensor.homematic_up
      to: 'off'
    action:
      service: homematic.reconnect

  - id: '8000000019010'
    alias: 'Heating: Decrease living room offset'
    trigger:
      - platform: time_pattern
        hours: '*'
        minutes: '/30'
        seconds: '0'
    condition:
    - alias: 'If the temperature difference exceeds 0.5°C'
      condition: template
      value_template: "{{ ( state_attr('climate.000a1709af6337', 'current_temperature')  | float + states('input_number.heating_offset_living_room') | float - states('sensor.living_room') | float ) > 0.5  }}"
    - alias: 'If the we can assume the heating should be on'
      condition: template
      value_template: "{{ ( state_attr('climate.000a1709af6337', 'current_temperature')  | float + states('input_number.heating_offset_living_room') | float ) >= 17.5 }}"
    action:
      service: input_number.decrement
      entity_id: input_number.heating_offset_living_room

  - id: '8000000019011'
    alias: 'Heating: Increase living room offset'
    trigger:
      - platform: time_pattern
        hours: '*'
        minutes: '/30'
        seconds: '0'
    condition:
    - alias: 'If the temperature difference exceeds 0.5°C'
      condition: template
      value_template: "{{ ( state_attr('climate.000a1709af6337', 'current_temperature')  | float + states('input_number.heating_offset_living_room') | float - states('sensor.living_room') | float ) < - 0.5  }}"
    - alias: 'If the we can assume the heating should be on'
      condition: template
      value_template: "{{ ( state_attr('climate.000a1709af6337', 'current_temperature')  | float + states('input_number.heating_offset_living_room') | float ) >= 17.5 }}"
    action:
      service: input_number.increment
      entity_id: input_number.heating_offset_living_room

  - id: '8000000019012'
    alias: 'Heating: reset offset'
    trigger:
      - platform: time_pattern
        hours: '*'
        minutes: '/15'
        seconds: '0'
    condition:
    - alias: 'If the we can assume the heating is off'
      condition: template
      value_template: "{{ ( state_attr('climate.000a1709af6337', 'current_temperature')  | float + states('input_number.heating_offset_living_room') | float ) < 17.5 }}"
    action:
      service: input_number.decrement
      entity_id: input_number.heating_offset_living_room
